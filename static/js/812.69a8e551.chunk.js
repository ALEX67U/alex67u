"use strict";(self.webpackChunkalex67u=self.webpackChunkalex67u||[]).push([[812,479],{683:(e,s,a)=>{a.d(s,{A:()=>i});a(43);var t=a(175),n=a(579);const i=e=>{let{videoId:s}=e;const a="https://www.youtube.com/embed/".concat(s);return(0,n.jsx)("div",{className:t.A.videoContainer,children:(0,n.jsx)("iframe",{className:t.A.video,src:a,title:"YouTube video player",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowFullScreen:!0})})}},812:(e,s,a)=>{a.r(s),a.d(s,{default:()=>l});a(43);var t=a(479),n=a(51),i=a(683),r=a(579);const l=()=>(0,r.jsxs)("div",{className:t.default.article,children:[(0,r.jsx)(n.A,{filePath:"".concat("/alex67u","/data/video/3Dprocedural.mp4")}),(0,r.jsxs)("div",{className:"".concat(t.default.paragraph_50," ").concat(t.default.padding1em),children:[(0,r.jsx)("h3",{className:t.default.subtitle,children:"Pourquoi un nouveau projet 3D en Java ?"}),(0,r.jsx)("p",{children:"Apr\xe8s avoir d\xe9j\xe0 r\xe9alis\xe9 un projet similaire en C++, j\u2019ai d\xe9cid\xe9 de repartir sur la cr\xe9ation d'un moteur 3D en Java pour explorer d'autres approches techniques et affiner mes comp\xe9tences en optimisation. L\u2019utilisation de Java avec OpenGL m\u2019offre la possibilit\xe9 de r\xe9\xe9valuer certaines m\xe9thodes, tout en travaillant sur un environnement o\xf9 la gestion m\xe9moire et les outils disponibles diff\xe8rent de ceux du C++."}),(0,r.jsx)("p",{children:"Mon objectif n\u2019est pas de r\xe9inventer la roue, mais plut\xf4t de d\xe9couvrir et d\u2019exp\xe9rimenter des techniques que je n\u2019avais pas explor\xe9es auparavant. Vous pouvez voir le r\xe9sultat de mon moteur actuelle dans cette vid\xe9o."})]}),(0,r.jsx)("h3",{className:t.default.subtitle,children:"Le co\xfbt en temps et en m\xe9moire d\u2019un triangle avec OpenGL"}),(0,r.jsxs)("div",{className:t.default.paragraph_100,children:[(0,r.jsx)("p",{children:"Avant de parler des techniques que j'ai utilis\xe9 ou que je souhaiterais mettre en place, je veux prendre le temps de mettre les bases, car comprendre le co\xfbt en temps et en m\xe9moire d\u2019un simple triangle est essentiel pour optimiser l\u2019ensemble du rendu."}),(0,r.jsx)("p",{children:"En OpenGL, un triangle est repr\xe9sent\xe9 par trois sommets, chacun ayant des attributs tels que la position, la couleur, la normale, et \xe9ventuellement des coordonn\xe9es de texture. Le stockage en m\xe9moire d\u2019un triangle inclut ces donn\xe9es pour chaque sommet. Par exemple, si chaque sommet contient trois composantes pour la position (x, y, z) et trois pour la couleur (r, g, b), on stocke d\xe9j\xe0 18 valeurs flottantes, soit 72 octets par triangle (en supposant que chaque valeur flottante occupe 4 octets). \xc0 cela peuvent s\u2019ajouter des donn\xe9es suppl\xe9mentaires, comme des normales pour l\u2019\xe9clairage ou des coordonn\xe9es de texture, ce qui augmente encore l\u2019utilisation m\xe9moire."})]}),(0,r.jsx)("div",{className:t.default.paragraph_50,children:(0,r.jsx)("img",{className:t.default.paragraph_100,src:"/alex67u/data/images/Vertex.png",alt:"Vertex.png"})}),(0,r.jsxs)("div",{className:t.default.paragraph_50,children:[(0,r.jsx)("p",{children:"En ce qui concerne le co\xfbt en temps, le rendu d\u2019un triangle implique plusieurs \xe9tapes, notamment le passage des donn\xe9es du CPU au GPU, les transformations g\xe9om\xe9triques, la rasterisation et enfin l\u2019application des shaders. Chaque triangle trait\xe9 passe par ces \xe9tapes, ce qui peut rapidement devenir co\xfbteux en termes de performances lorsque leur nombre augmente."}),(0,r.jsx)("p",{children:"L\u2019optimisation \xe0 ce niveau repose souvent sur la r\xe9duction du nombre de triangles \xe0 rendre, en utilisant des techniques comme le culling (exclusion des triangles non visibles) ou la simplification de mod\xe8les pour limiter la complexit\xe9 g\xe9om\xe9trique."})]}),(0,r.jsx)("div",{className:t.default.paragraph_100,children:(0,r.jsx)("p",{children:"En somme, bien que chaque triangle individuel semble l\xe9ger en termes de co\xfbt, leur multiplication dans une sc\xe8ne 3D peut entra\xeener une augmentation exponentielle de la consommation de m\xe9moire et du temps de calcul, ce qui rend l\u2019optimisation cruciale dans un moteur 3D."})}),(0,r.jsx)("h3",{className:t.default.subtitle,children:"Le monde en voxel : une matrice 3D"}),(0,r.jsxs)("div",{className:t.default.paragraph_50,children:[(0,r.jsx)("p",{children:"Un voxel (\xe9l\xe9ment volum\xe9trique) est \xe0 la 3D ce que le pixel est \xe0 la 2D. C\u2019est une unit\xe9 de volume dans un espace divis\xe9 en une grille tridimensionnelle."}),(0,r.jsx)("p",{children:"Les mondes en voxels sont utilis\xe9s dans de nombreux contextes, notamment pour les jeux vid\xe9o o\xf9 l\u2019environnement est construit \xe0 partir de blocs cubiques. Cette technique permet de cr\xe9er des paysages, des terrains, et bien plus encore."})]}),(0,r.jsx)("div",{className:"".concat(t.default.paragraph_50," ").concat(t.default.margincontent),children:(0,r.jsx)("img",{className:t.default.paragraph_50,src:"/alex67u/data/images/Voxelgitter.png",alt:"Voxelgitter.png"})}),(0,r.jsx)("div",{className:t.default.paragraph_100,children:(0,r.jsx)("p",{children:"Cependant, contrairement aux moteurs classiques qui utilisent des cubes standardis\xe9s pour chaque voxel, j\u2019ai opt\xe9 pour une m\xe9thode un peu plus complexe."})}),(0,r.jsx)("h3",{className:t.default.subtitle,children:"Un syst\xe8me de voxels sans cubes pr\xe9d\xe9finis"}),(0,r.jsxs)("div",{className:t.default.paragraph_100,children:[(0,r.jsx)("p",{children:"Dans la plupart des moteurs bas\xe9s sur des voxels, chaque voxel est repr\xe9sent\xe9 par un simple cube. Cette approche est populaire car elle simplifie grandement les calculs et facilite l\u2019optimisation."}),(0,r.jsx)("p",{children:"Pour mon projet, j\u2019ai choisi de ne pas me limiter \xe0 cette structure cubique. Mon syst\xe8me de voxels repose sur des points d\xe9finis dans un intervalle [0.0, 1.0] en 3 dimensions, ce qui permet d\u2019avoir plus de flexibilit\xe9 dans les formes g\xe9n\xe9r\xe9es."}),(0,r.jsx)("p",{children:"Cette approche augmente la complexit\xe9 des calculs et de l\u2019optimisation, mais elle ouvre aussi la porte \xe0 des configurations plus diversifi\xe9es."})]}),(0,r.jsx)("h3",{className:t.default.subtitle,children:"Gestion des chunks et vers un syst\xe8me d\u2019octree"}),(0,r.jsxs)("div",{className:t.default.paragraph_100,children:[(0,r.jsx)("p",{children:"Actuellement, mon moteur utilise une gestion classique par chunks. Un chunk regroupe plusieurs voxels, ce qui facilite la gestion de grandes zones dans le monde 3D. Les chunks sont des blocs de donn\xe9es de taille fixe, ce qui permet de diviser l\u2019espace de mani\xe8re coh\xe9rente et de rendre uniquement les parties n\xe9cessaires \xe0 l\u2019affichage."}),(0,r.jsx)("p",{children:"Cependant, cette approche atteint rapidement ses limites dans des sc\xe8nes plus complexes ou dynamiques. La m\xe9thode par chunks impose de charger et de rendre des sections enti\xe8res, m\xeame si une grande partie des voxels ne sont pas visibles ou utiles pour la sc\xe8ne actuelle. Cette inefficacit\xe9 m\u2019a amen\xe9 \xe0 r\xe9fl\xe9chir \xe0 une autre m\xe9thode : l\u2019utilisation d\u2019un octree."})]}),(0,r.jsxs)("div",{className:t.default.paragraph_50,children:[(0,r.jsx)("p",{children:"L\u2019octree est une structure de donn\xe9es hi\xe9rarchique que j'ai d\xe9couverte lors de mes cours \xe0 l'UFR MIM. Il divise l\u2019espace en cellules (ou n\u0153uds) de plus en plus petites \xe0 mesure qu\u2019on descend dans la hi\xe9rarchie. Chaque n\u0153ud peut contenir jusqu'\xe0 huit sous-n\u0153uds, ce qui permet d\u2019adapter la granularit\xe9 de la division en fonction de la complexit\xe9 locale du monde 3D."}),(0,r.jsx)("p",{children:"Cette approche est particuli\xe8rement avantageuse pour g\xe9rer les sc\xe8nes o\xf9 une grande partie de l\u2019espace est vide ou peu d\xe9taill\xe9e. Par exemple, dans un monde voxel, si une r\xe9gion est vide ou uniforme, l\u2019octree peut repr\xe9senter cette r\xe9gion avec un seul n\u0153ud, \xe9conomisant ainsi \xe0 la fois en calculs et en m\xe9moire."})]}),(0,r.jsx)("div",{className:"".concat(t.default.paragraph_50," ").concat(t.default.margincontent),children:(0,r.jsx)("img",{className:t.default.paragraph_100,src:"/alex67u/data/images/Octree2.png",alt:"Octree2.png"})}),(0,r.jsxs)("div",{className:t.default.paragraph_100,children:[(0,r.jsx)("p",{children:'De plus, l\'octree facilite l\u2019exclusion des \xe9l\xe9ments non visibles gr\xe2ce \xe0 un processus appel\xe9 "frustum culling", o\xf9 seules les cellules pertinentes pour le champ de vision actuel sont rendues. Cela r\xe9duit consid\xe9rablement le nombre de voxels \xe0 traiter par le GPU, am\xe9liorant ainsi la performance globale du moteur.'}),(0,r.jsx)("p",{children:"En r\xe9sum\xe9, en passant d\u2019une gestion par chunks \xe0 un syst\xe8me d\u2019octree, l\u2019objectif est de mieux adapter la complexit\xe9 des calculs aux besoins r\xe9els de la sc\xe8ne. Plut\xf4t que de rendre syst\xe9matiquement de grands blocs de voxels, l'octree permet une gestion plus granulaire et optimis\xe9e, en ne chargeant que les parties cruciales pour le rendu."})]}),(0,r.jsx)("h3",{className:t.default.subtitle,children:"Un projet en cours ax\xe9 sur l'exploration technique"}),(0,r.jsxs)("div",{className:t.default.paragraph_100,children:[(0,r.jsx)("p",{children:"Ce projet n\u2019a pas pour but de devenir un jeu ou un produit finalis\xe9. Il s\u2019agit avant tout d\u2019un terrain d\u2019exp\xe9rimentation o\xf9 je teste diff\xe9rentes techniques d\u2019optimisation et de rendu 3D."}),(0,r.jsx)("p",{children:"Le d\xe9veloppement est en constante \xe9volution, et je continue d\u2019apprendre en mettant en \u0153uvre des solutions nouvelles et en r\xe9\xe9valuant celles que j\u2019ai d\xe9j\xe0 explor\xe9es."}),(0,r.jsx)("p",{children:"C\u2019est un projet personnel, principalement motiv\xe9 par l\u2019envie de mieux comprendre les d\xe9fis li\xe9s \xe0 la cr\xe9ation d\u2019un moteur 3D, la gestion d\u2019un monde proc\xe9dural et surtout l'optimisation d'un syst\xe8me complexe!"})]}),(0,r.jsx)("h3",{className:t.default.subtitle,children:"Quelques r\xe9f\xe9rences"}),(0,r.jsx)("div",{className:t.default.paragraph_100,children:(0,r.jsx)("p",{children:"Si vous souhaitez en savoir plus sur les syst\xe8mes de voxels, la gestion des chunks, ou tout autres choses en rapport, voici quelques ressources que j'ai trouv\xe9es int\xe9ressantes et utiles pour mes recherches : (la majorit\xe9 de ces ressources que je partage sont exclusivement en anglais)"})}),(0,r.jsx)(i.A,{videoId:"4QOcCGI6xOU"}),(0,r.jsx)(i.A,{videoId:"-POwgollFeY"}),(0,r.jsx)(i.A,{videoId:"z_Q0sA3wE10"}),(0,r.jsx)(i.A,{videoId:"7zqvtVCZNaw"})]})},51:(e,s,a)=>{a.d(s,{A:()=>i});a(43);var t=a(175),n=a(579);const i=e=>{let{filePath:s}=e;return(0,n.jsx)("div",{className:t.A.videoContainer,children:(0,n.jsxs)("video",{className:t.A.video,controls:!0,children:[(0,n.jsx)("source",{src:s,type:"video/mp4"}),"Votre navigateur ne supporte pas la balise vid\xe9o."]})})}},479:(e,s,a)=>{a.r(s),a.d(s,{default:()=>t});const t={article:"Article_article__+gNQy",subtitle:"Article_subtitle__lXQXQ",paragraph_50:"Article_paragraph_50__pJ95J",padding1em:"Article_padding1em__kEm6Q",paragraph_100:"Article_paragraph_100__LJbdS",margincontent:"Article_margincontent__+cw48",maxcontent:"Article_maxcontent__umvPg",list:"Article_list__KhP-C"}},175:(e,s,a)=>{a.d(s,{A:()=>t});const t={videoContainer:"videoMP4_videoContainer__jR5fp",video:"videoMP4_video__LG6aT"}}}]);
//# sourceMappingURL=812.69a8e551.chunk.js.map